swagger: '2.0'
info:
  description: API in Rails for the Bonnie application
  version: 3.0.0
  title: Bonnie API
  contact:
    email: kevin@getbonnie.com
host: api.getbonnie.com
basePath: /api/v3
schemes:
  - https
paths:
  /instagram:
    get:
      tags:
        - auth
        - instagram
      summary: Get token
      parameters:
        - name: code
          in: query
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Instagram'
        '400':
          schema:
            $ref: '#/definitions/InstagramError'
  /users/themes:
    get:
      tags:
        - user
      summary: Returns all the themes
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'
  /facebook/{ref}:
    get:
      tags:
        - auth
      summary: Returns the JWT token
      produces:
        - application/json
      parameters:
        - name: ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/JwtTokenState'
  /facebook:
    post:
      tags:
        - auth
      summary: Create a user and a JWT token
      produces:
        - application/json
      parameters:
        - in: body
          name: facebook
          required: true
          schema:
            $ref: '#/definitions/Facebook'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/JwtToken'
  '/users/{user_ref}':
    get:
      tags:
        - user
      summary: Profile of a user
      produces:
        - application/json
      parameters:
        - name: from_connection
          in: query
          type: integer
          description: Activate is_visited flag for connection
        - name: user_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Profile'
  /me:
    get:
      tags:
        - me
        - user
      summary: My profile
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Me'
    put:
      tags:
        - me
      summary: Update my profile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/MeUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Me'
  /activate:
    post:
      tags:
        - me
      summary: Activate my profile
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Me'
  /media/{size}/{shape}/{media_ref}.{extension}:
    get:
      tags:
      - image
      summary: "Display image"
      produces:
        - binary
      parameters:
      - name: size
        in: path
        required: true
        type: integer
      - name: shape
        in: path
        required: true
        type: string
      - name: media_ref
        in: path
        required: true
        type: string
      - name: extension
        in: path
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: file
  /media:
    post:
      tags:
        - image
      summary: Post an image
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: medium
          in: body
          required: true
          schema:
            $ref: '#/definitions/PicturePost'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SelfPicture'
  /media/{media_ref}:
    get:
      tags:
        - image
      summary: Display an image
      produces:
        - application/json
      parameters:
        - name: media_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Picture'
    put:
      tags:
        - image
      summary: Edit an image
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: media_ref
          in: path
          required: true
          type: string
        - name: medium
          in: body
          required: true
          schema:
            $ref: '#/definitions/PicturePost'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Picture'
    delete:
      tags:
        - image
      summary: Delete an image
      produces:
        - application/json
      parameters:
        - name: media_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /connections:
    get:
      tags:
        - connection
        - discussion
      summary: Display connections
      parameters:
        - name: page
          in: query
          type: integer
        - name: per
          in: query
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Connection'
  /discussions:
    get:
      tags:
        - discussion
      summary: Display discussions
      parameters:
        - name: page
          in: query
          type: integer
        - name: per
          in: query
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
    post:
      tags:
        - discussion
      summary: Create a discussion
      parameters:
        - name: medium
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscussionCreate'
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /discussions/{discussion_ref}/accept:
    put:
      tags:
        - discussion
      summary: Accept a discussion
      produces:
        - application/json
      parameters:
        - name: discussion_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Discussion'
  /discussions/{discussion_ref}/unblur:
    put:
      tags:
        - discussion
      summary: Accept a discussion
      produces:
        - application/json
      parameters:
        - name: discussion_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Discussion'
  /discussions/{discussion_ref}:
    get:
      tags:
        - discussion
      summary: Display a discussion
      produces:
        - application/json
      parameters:
        - name: discussion_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Discussion'
    put:
      tags:
        - discussion
      summary: Set to read
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: discussion_ref
          in: path
          required: true
          type: string
        - name: discussion
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscussionUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /cards:
    get:
      tags:
        - card
      summary: Fetch a batch of card
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
  /cards/likes/{ref}:
    get:
      tags:
        - card
      summary: Fetch a batch of card
      parameters:
        - name: ref
          in: path
          description: card ref
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /cards/dislikes/{ref}:
    get:
      tags:
        - card
      summary: Dislike a card
      parameters:
        - name: ref
          in: path
          description: card ref
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /cards/likes/count:
    get:
      tags:
        - card
      summary: Return the likes left
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LikeCount'
  /messages/{discussion_ref}:
    post:
      tags:
        - discussion
      summary: Post a message
      produces:
        - application/json
      parameters:
        - name: discussion_ref
          in: path
          required: true
          type: string
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/MessagePost'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Message'
    get:
      tags:
        - discussion
      summary: Display messages from a discussion
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          type: integer
        - name: per
          in: query
          type: integer
        - name: discussion_ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
  /flags:
    post:
      tags:
        - flag
      summary: Flag a discussion or a user
      produces:
        - application/json
      parameters:
        - name: flag
          in: body
          required: true
          schema:
            $ref: '#/definitions/FlagPost'
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
  /log_user:
    post:
      tags:
        - log
      summary: Log user visit
      produces:
        - application/json
      parameters:
        - name: log_user
          in: body
          required: true
          schema:
            $ref: '#/definitions/LogUser'
      responses:
        '200':
          description: successful operation
          schema:
            type: boolean
definitions:
  Card:
    type: object
    properties:
      id:
        type: integer
      created_at:
        type: string
        format: datetime
      description:
        $ref: '#/definitions/UserCard'
      picture:
        $ref: '#/definitions/Picture'
  UserCard:
    type: object
    properties:
      age:
        type: integer
      description:
        type: string
      theme:
        $ref: '#/definitions/Theme'
      gender:
        type: string
        enum:
          - male
          - female
  Profile:
    type: object
    properties:
      ref:
        type: string
      first_name:
        type: string
      age:
        type: integer
      description:
        type: string
      theme:
        $ref: '#/definitions/Theme'
      picture_count:
        type: integer
      portrait_count:
        type: integer
      gender:
        type: string
        enum:
          - male
          - female
      distance:
        description: Distance in km
        type: number
        format: float
      discussion:
        $ref: '#/definitions/DiscussionSmall'
      portraits:
        type: array
        items:
          $ref: '#/definitions/Picture'
      pictures:
        type: array
        items:
          $ref: '#/definitions/Picture'
      cards_liked:
        type: array
        items:
          $ref: '#/definitions/Card'
      cards_reversed_liked:
        type: array
        items:
          $ref: '#/definitions/Card'
  Me:
    type: object
    properties:
      id:
        type: integer
      ref:
        type: string
      first_name:
        type: string
      age:
        type: integer
      description:
        type: string
      theme:
        $ref: '#/definitions/Theme'
      distance_from_live_zone:
        type: integer
      picture_count:
        type: integer
      portrait_count:
        type: integer
      range:
        type: number
      age_min:
        type: number
      age_max:
        type: number
      instagram_access_token:
        type: string
      gender:
        type: string
        enum:
          - male
          - female
      gender_target:
        type: string
        enum:
          - male
          - female
          - bisexual
      is_notification_match:
        type: boolean
      is_notification_selection:
        type: boolean
      is_notification_message:
        type: boolean
      is_onboarded:
        type: boolean
      state:
        type: string
        enum:
        - pending
        - deleted
        - active
      portraits:
        type: array
        items:
          $ref: '#/definitions/SelfPicture'
      pictures:
        type: array
        items:
          $ref: '#/definitions/Picture'
  Theme:
    type: object
    properties:
      key:
        type: string
      name:
        type: string
      background:
        type: array
      foreground:
        type: string
  MeUpdate:
    type: object
    properties:
      ref:
        type: string
      first_name:
        type: string
      age:
        type: integer
      description:
        type: string
      theme:
        type: string
      range:
        type: number
      age_min:
        type: number
      age_max:
        type: number
      latitude:
        type: number
      longitude:
        type: number
      gender:
        type: string
        enum:
          - male
          - female
      gender_target:
        type: string
        enum:
          - male
          - female
          - bisexual
      is_notification_match:
        type: boolean
      is_notification_selection:
        type: boolean
      is_notification_message:
        type: boolean
  Picture:
    type: object
    properties:
      ref:
        type: string
      label:
        type: string
      width:
        type: integer
      height:
        type: integer
      ratio:
        description: Aspect ratio
        type: number
        format: float
      color:
        type: string
      position:
        type: integer
      created_at:
        type: string
        format: datetime
      url:
        type: string
  SelfPicture:
    type: object
    properties:
      ref:
        type: string
      label:
        type: string
      width:
        type: integer
      height:
        type: integer
      ratio:
        description: Aspect ratio
        type: number
        format: float
      color:
        type: string
      position:
        type: integer
      created_at:
        type: string
        format: datetime
      url:
        type: string
      url_blurred:
        type: string
      face_max_probability:
        type: number
        format: float
  JwtTokenState:
    type: object
    properties:
      token:
        type: string
      user_state:
        type: string
        enum:
        - active
        - pending
        - deleted
  JwtToken:
    type: object
    properties:
      token:
        type: string
  Facebook:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      gender:
        type: string
      birthday:
        type: string
        format: date
  PicturePost:
    type: object
    properties:
      item:
        type: string
      position:
        type: integer
      type_of:
        type: string
        enum:
        - portrait
        - picture
      label:
        type: string
  Discussion:
    type: object
    properties:
      ref:
        type: string
      last_message_at:
        type: string
        format: date
      message_count:
        type: integer
      unread_count:
        type: integer
      created_at:
        type: string
        format: date
      updated_at:
        type: string
        format: date
      last_visit_at:
        type: string
        format: date
      has_accepted:
        type: boolean
      is_unblur:
        type: boolean
      has_accepted_target:
        type: boolean
      is_unblur_target:
        type: boolean
      user:
        $ref: '#/definitions/Profile'
  DiscussionCreate:
    type: object
    properties:
      user_ref:
        type: string
      message:
        type: string
  DiscussionSmall:
    type: object
    properties:
      ref:
        type: string
      has_accepted:
        type: boolean
      is_unblur:
        type: boolean
      has_accepted_target:
        type: boolean
      is_unblur_target:
        type: boolean
      last_message_at:
        type: string
        format: date
  DiscussionUpdate:
    type: object
    properties:
      read:
        type: boolean
  Message:
    type: object
    properties:
      id:
        type: integer
      message:
        type: string
      created_at:
        type: string
        format: date
      user_ref:
        type: string
  MessagePost:
    type: object
    properties:
      message:
        type: string
  FlagPost:
    type: object
    properties:
      user_ref:
        type: string
      medium_ref:
        type: string
      discussion_ref:
        type: string
      type_of:
        type: string
        enum:
        - unmatch
        - rules
        - behavior
        - message
        - spam
  LogUser:
    type: object
    properties:
      ip:
        type: string
      device_unique_id:
        type: string
      user_agent:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      device_manufacturer:
        type: string
      device_brand:
        type: string
      device_model:
        type: string
      device_id:
        type: string
      device_name:
        type: string
      device_local:
        type: string
      device_country:
        type: string
      system_name:
        type: string
      system_version:
        type: string
      bundle_id:
        type: string
      build_number:
        type: string
      app_version:
        type: string
      app_version_readable:
        type: string
      app_instance_id:
        type: string
      timezone:
        type: string
      is_emulator:
        type: boolean
      is_tablet:
        type: boolean
  LikeCount:
    type: object
    properties:
      last_like:
        type: string
        format: datetime
      likes_left:
        type: integer
  Connection:
    type: object
    properties:
      ref:
        type: string
      is_visited:
        type: boolean
      portrait:
        $ref: '#/definitions/Picture'
      cards_liked:
        type: array
        items:
          $ref: '#/definitions/Card'
  Instagram:
    type: object
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/InstagramUser'
  InstagramUser:
    type: object
    properties:
      id:
        type: integer
      instagram_ref:
        type: integer
      username:
        type: string
      full_name:
        type: string
      profile_picture:
        type: string
  InstagramError:
    type: object
    properties:
      error_type:
        type: string
      code:
        type: integer
      error_message:
        type: string
